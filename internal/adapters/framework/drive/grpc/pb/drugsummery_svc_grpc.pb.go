// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DrugSummeryServiceClient is the client API for DrugSummeryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DrugSummeryServiceClient interface {
	GetDrugSummery(ctx context.Context, in *GetDrugSummeryParameters, opts ...grpc.CallOption) (*DrugSummeryListResult, error)
	UpdateDrugSummery(ctx context.Context, in *DrugSummeryUpdateParam, opts ...grpc.CallOption) (*DrugSummeryUpdateResult, error)
	GetDrugSummeryOfADrug(ctx context.Context, in *DrugSummeryOfADrugResultParam, opts ...grpc.CallOption) (*DrugSummeryOfADrugResultList, error)
}

type drugSummeryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDrugSummeryServiceClient(cc grpc.ClientConnInterface) DrugSummeryServiceClient {
	return &drugSummeryServiceClient{cc}
}

func (c *drugSummeryServiceClient) GetDrugSummery(ctx context.Context, in *GetDrugSummeryParameters, opts ...grpc.CallOption) (*DrugSummeryListResult, error) {
	out := new(DrugSummeryListResult)
	err := c.cc.Invoke(ctx, "/pb.DrugSummeryService/GetDrugSummery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drugSummeryServiceClient) UpdateDrugSummery(ctx context.Context, in *DrugSummeryUpdateParam, opts ...grpc.CallOption) (*DrugSummeryUpdateResult, error) {
	out := new(DrugSummeryUpdateResult)
	err := c.cc.Invoke(ctx, "/pb.DrugSummeryService/UpdateDrugSummery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *drugSummeryServiceClient) GetDrugSummeryOfADrug(ctx context.Context, in *DrugSummeryOfADrugResultParam, opts ...grpc.CallOption) (*DrugSummeryOfADrugResultList, error) {
	out := new(DrugSummeryOfADrugResultList)
	err := c.cc.Invoke(ctx, "/pb.DrugSummeryService/GetDrugSummeryOfADrug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DrugSummeryServiceServer is the server API for DrugSummeryService service.
// All implementations should embed UnimplementedDrugSummeryServiceServer
// for forward compatibility
type DrugSummeryServiceServer interface {
	GetDrugSummery(context.Context, *GetDrugSummeryParameters) (*DrugSummeryListResult, error)
	UpdateDrugSummery(context.Context, *DrugSummeryUpdateParam) (*DrugSummeryUpdateResult, error)
	GetDrugSummeryOfADrug(context.Context, *DrugSummeryOfADrugResultParam) (*DrugSummeryOfADrugResultList, error)
}

// UnimplementedDrugSummeryServiceServer should be embedded to have forward compatible implementations.
type UnimplementedDrugSummeryServiceServer struct {
}

func (UnimplementedDrugSummeryServiceServer) GetDrugSummery(context.Context, *GetDrugSummeryParameters) (*DrugSummeryListResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDrugSummery not implemented")
}
func (UnimplementedDrugSummeryServiceServer) UpdateDrugSummery(context.Context, *DrugSummeryUpdateParam) (*DrugSummeryUpdateResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDrugSummery not implemented")
}
func (UnimplementedDrugSummeryServiceServer) GetDrugSummeryOfADrug(context.Context, *DrugSummeryOfADrugResultParam) (*DrugSummeryOfADrugResultList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDrugSummeryOfADrug not implemented")
}

// UnsafeDrugSummeryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DrugSummeryServiceServer will
// result in compilation errors.
type UnsafeDrugSummeryServiceServer interface {
	mustEmbedUnimplementedDrugSummeryServiceServer()
}

func RegisterDrugSummeryServiceServer(s grpc.ServiceRegistrar, srv DrugSummeryServiceServer) {
	s.RegisterService(&DrugSummeryService_ServiceDesc, srv)
}

func _DrugSummeryService_GetDrugSummery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDrugSummeryParameters)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DrugSummeryServiceServer).GetDrugSummery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DrugSummeryService/GetDrugSummery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DrugSummeryServiceServer).GetDrugSummery(ctx, req.(*GetDrugSummeryParameters))
	}
	return interceptor(ctx, in, info, handler)
}

func _DrugSummeryService_UpdateDrugSummery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DrugSummeryUpdateParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DrugSummeryServiceServer).UpdateDrugSummery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DrugSummeryService/UpdateDrugSummery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DrugSummeryServiceServer).UpdateDrugSummery(ctx, req.(*DrugSummeryUpdateParam))
	}
	return interceptor(ctx, in, info, handler)
}

func _DrugSummeryService_GetDrugSummeryOfADrug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DrugSummeryOfADrugResultParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DrugSummeryServiceServer).GetDrugSummeryOfADrug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.DrugSummeryService/GetDrugSummeryOfADrug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DrugSummeryServiceServer).GetDrugSummeryOfADrug(ctx, req.(*DrugSummeryOfADrugResultParam))
	}
	return interceptor(ctx, in, info, handler)
}

// DrugSummeryService_ServiceDesc is the grpc.ServiceDesc for DrugSummeryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DrugSummeryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.DrugSummeryService",
	HandlerType: (*DrugSummeryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDrugSummery",
			Handler:    _DrugSummeryService_GetDrugSummery_Handler,
		},
		{
			MethodName: "UpdateDrugSummery",
			Handler:    _DrugSummeryService_UpdateDrugSummery_Handler,
		},
		{
			MethodName: "GetDrugSummeryOfADrug",
			Handler:    _DrugSummeryService_GetDrugSummeryOfADrug_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "drugsummery_svc.proto",
}
