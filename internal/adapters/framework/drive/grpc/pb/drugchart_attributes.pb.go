// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: drugchart_attributes.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDrugChartParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId string `protobuf:"bytes,1,opt,name=patientId,proto3" json:"patientId,omitempty"`
}

func (x *GetDrugChartParameters) Reset() {
	*x = GetDrugChartParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugchart_attributes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDrugChartParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDrugChartParameters) ProtoMessage() {}

func (x *GetDrugChartParameters) ProtoReflect() protoreflect.Message {
	mi := &file_drugchart_attributes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDrugChartParameters.ProtoReflect.Descriptor instead.
func (*GetDrugChartParameters) Descriptor() ([]byte, []int) {
	return file_drugchart_attributes_proto_rawDescGZIP(), []int{0}
}

func (x *GetDrugChartParameters) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type DrugResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrugId             int64  `protobuf:"varint,1,opt,name=drugId,proto3" json:"drugId,omitempty"`
	DrugName           string `protobuf:"bytes,2,opt,name=drugName,proto3" json:"drugName,omitempty"`
	ScientficName      string `protobuf:"bytes,3,opt,name=scientficName,proto3" json:"scientficName,omitempty"`
	DrugCategory       string `protobuf:"bytes,4,opt,name=drugCategory,proto3" json:"drugCategory,omitempty"`
	StorageTemperature string `protobuf:"bytes,5,opt,name=storageTemperature,proto3" json:"storageTemperature,omitempty"`
	DangerousLevel     string `protobuf:"bytes,6,opt,name=dangerousLevel,proto3" json:"dangerousLevel,omitempty"`
	Manufacture        string `protobuf:"bytes,7,opt,name=manufacture,proto3" json:"manufacture,omitempty"`
	NoOfUnits          int64  `protobuf:"varint,8,opt,name=noOfUnits,proto3" json:"noOfUnits,omitempty"`
	Note               string `protobuf:"bytes,9,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *DrugResult) Reset() {
	*x = DrugResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugchart_attributes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugResult) ProtoMessage() {}

func (x *DrugResult) ProtoReflect() protoreflect.Message {
	mi := &file_drugchart_attributes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugResult.ProtoReflect.Descriptor instead.
func (*DrugResult) Descriptor() ([]byte, []int) {
	return file_drugchart_attributes_proto_rawDescGZIP(), []int{1}
}

func (x *DrugResult) GetDrugId() int64 {
	if x != nil {
		return x.DrugId
	}
	return 0
}

func (x *DrugResult) GetDrugName() string {
	if x != nil {
		return x.DrugName
	}
	return ""
}

func (x *DrugResult) GetScientficName() string {
	if x != nil {
		return x.ScientficName
	}
	return ""
}

func (x *DrugResult) GetDrugCategory() string {
	if x != nil {
		return x.DrugCategory
	}
	return ""
}

func (x *DrugResult) GetStorageTemperature() string {
	if x != nil {
		return x.StorageTemperature
	}
	return ""
}

func (x *DrugResult) GetDangerousLevel() string {
	if x != nil {
		return x.DangerousLevel
	}
	return ""
}

func (x *DrugResult) GetManufacture() string {
	if x != nil {
		return x.Manufacture
	}
	return ""
}

func (x *DrugResult) GetNoOfUnits() int64 {
	if x != nil {
		return x.NoOfUnits
	}
	return 0
}

func (x *DrugResult) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type DrugResultForDashBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrugName   string `protobuf:"bytes,1,opt,name=drugName,proto3" json:"drugName,omitempty"`
	Dose       string `protobuf:"bytes,2,opt,name=dose,proto3" json:"dose,omitempty"`
	Dosage     string `protobuf:"bytes,3,opt,name=dosage,proto3" json:"dosage,omitempty"`
	Frequency  int32  `protobuf:"varint,4,opt,name=frequency,proto3" json:"frequency,omitempty"`
	GivenDate  string `protobuf:"bytes,5,opt,name=givenDate,proto3" json:"givenDate,omitempty"`
	GiveUntill string `protobuf:"bytes,6,opt,name=giveUntill,proto3" json:"giveUntill,omitempty"`
}

func (x *DrugResultForDashBoard) Reset() {
	*x = DrugResultForDashBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugchart_attributes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugResultForDashBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugResultForDashBoard) ProtoMessage() {}

func (x *DrugResultForDashBoard) ProtoReflect() protoreflect.Message {
	mi := &file_drugchart_attributes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugResultForDashBoard.ProtoReflect.Descriptor instead.
func (*DrugResultForDashBoard) Descriptor() ([]byte, []int) {
	return file_drugchart_attributes_proto_rawDescGZIP(), []int{2}
}

func (x *DrugResultForDashBoard) GetDrugName() string {
	if x != nil {
		return x.DrugName
	}
	return ""
}

func (x *DrugResultForDashBoard) GetDose() string {
	if x != nil {
		return x.Dose
	}
	return ""
}

func (x *DrugResultForDashBoard) GetDosage() string {
	if x != nil {
		return x.Dosage
	}
	return ""
}

func (x *DrugResultForDashBoard) GetFrequency() int32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *DrugResultForDashBoard) GetGivenDate() string {
	if x != nil {
		return x.GivenDate
	}
	return ""
}

func (x *DrugResultForDashBoard) GetGiveUntill() string {
	if x != nil {
		return x.GiveUntill
	}
	return ""
}

type DrugChartResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drugs []*DrugResult `protobuf:"bytes,1,rep,name=drugs,proto3" json:"drugs,omitempty"`
}

func (x *DrugChartResult) Reset() {
	*x = DrugChartResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugchart_attributes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugChartResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugChartResult) ProtoMessage() {}

func (x *DrugChartResult) ProtoReflect() protoreflect.Message {
	mi := &file_drugchart_attributes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugChartResult.ProtoReflect.Descriptor instead.
func (*DrugChartResult) Descriptor() ([]byte, []int) {
	return file_drugchart_attributes_proto_rawDescGZIP(), []int{3}
}

func (x *DrugChartResult) GetDrugs() []*DrugResult {
	if x != nil {
		return x.Drugs
	}
	return nil
}

type DrugChartResultForDashBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drugs []*DrugResultForDashBoard `protobuf:"bytes,1,rep,name=drugs,proto3" json:"drugs,omitempty"`
}

func (x *DrugChartResultForDashBoard) Reset() {
	*x = DrugChartResultForDashBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugchart_attributes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugChartResultForDashBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugChartResultForDashBoard) ProtoMessage() {}

func (x *DrugChartResultForDashBoard) ProtoReflect() protoreflect.Message {
	mi := &file_drugchart_attributes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugChartResultForDashBoard.ProtoReflect.Descriptor instead.
func (*DrugChartResultForDashBoard) Descriptor() ([]byte, []int) {
	return file_drugchart_attributes_proto_rawDescGZIP(), []int{4}
}

func (x *DrugChartResultForDashBoard) GetDrugs() []*DrugResultForDashBoard {
	if x != nil {
		return x.Drugs
	}
	return nil
}

type DrugChartForNurseDeskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrugName         string `protobuf:"bytes,1,opt,name=drugName,proto3" json:"drugName,omitempty"`
	Dose             string `protobuf:"bytes,2,opt,name=dose,proto3" json:"dose,omitempty"`
	Dosage           string `protobuf:"bytes,3,opt,name=dosage,proto3" json:"dosage,omitempty"`
	Frequency        int32  `protobuf:"varint,4,opt,name=frequency,proto3" json:"frequency,omitempty"`
	GivenDate        string `protobuf:"bytes,5,opt,name=givenDate,proto3" json:"givenDate,omitempty"`
	GiveUntill       string `protobuf:"bytes,6,opt,name=giveUntill,proto3" json:"giveUntill,omitempty"`
	DrugsummeryId    int64  `protobuf:"varint,7,opt,name=drugsummery_id,json=drugsummeryId,proto3" json:"drugsummery_id,omitempty"`
	SummeryDate      string `protobuf:"bytes,8,opt,name=summery_date,json=summeryDate,proto3" json:"summery_date,omitempty"`
	SummeryStatus    bool   `protobuf:"varint,9,opt,name=summery_status,json=summeryStatus,proto3" json:"summery_status,omitempty"`
	FirstDoseStatus  int32  `protobuf:"varint,10,opt,name=firstDoseStatus,proto3" json:"firstDoseStatus,omitempty"`
	SecondDoseStatus int32  `protobuf:"varint,11,opt,name=secondDoseStatus,proto3" json:"secondDoseStatus,omitempty"`
	ThirdDoseStatus  int32  `protobuf:"varint,12,opt,name=thirdDoseStatus,proto3" json:"thirdDoseStatus,omitempty"`
	FourthDoseStatus int32  `protobuf:"varint,13,opt,name=fourthDoseStatus,proto3" json:"fourthDoseStatus,omitempty"`
	DrugorderId      int64  `protobuf:"varint,14,opt,name=drugorder_id,json=drugorderId,proto3" json:"drugorder_id,omitempty"`
	PatientId        string `protobuf:"bytes,15,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
}

func (x *DrugChartForNurseDeskResult) Reset() {
	*x = DrugChartForNurseDeskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugchart_attributes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugChartForNurseDeskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugChartForNurseDeskResult) ProtoMessage() {}

func (x *DrugChartForNurseDeskResult) ProtoReflect() protoreflect.Message {
	mi := &file_drugchart_attributes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugChartForNurseDeskResult.ProtoReflect.Descriptor instead.
func (*DrugChartForNurseDeskResult) Descriptor() ([]byte, []int) {
	return file_drugchart_attributes_proto_rawDescGZIP(), []int{5}
}

func (x *DrugChartForNurseDeskResult) GetDrugName() string {
	if x != nil {
		return x.DrugName
	}
	return ""
}

func (x *DrugChartForNurseDeskResult) GetDose() string {
	if x != nil {
		return x.Dose
	}
	return ""
}

func (x *DrugChartForNurseDeskResult) GetDosage() string {
	if x != nil {
		return x.Dosage
	}
	return ""
}

func (x *DrugChartForNurseDeskResult) GetFrequency() int32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *DrugChartForNurseDeskResult) GetGivenDate() string {
	if x != nil {
		return x.GivenDate
	}
	return ""
}

func (x *DrugChartForNurseDeskResult) GetGiveUntill() string {
	if x != nil {
		return x.GiveUntill
	}
	return ""
}

func (x *DrugChartForNurseDeskResult) GetDrugsummeryId() int64 {
	if x != nil {
		return x.DrugsummeryId
	}
	return 0
}

func (x *DrugChartForNurseDeskResult) GetSummeryDate() string {
	if x != nil {
		return x.SummeryDate
	}
	return ""
}

func (x *DrugChartForNurseDeskResult) GetSummeryStatus() bool {
	if x != nil {
		return x.SummeryStatus
	}
	return false
}

func (x *DrugChartForNurseDeskResult) GetFirstDoseStatus() int32 {
	if x != nil {
		return x.FirstDoseStatus
	}
	return 0
}

func (x *DrugChartForNurseDeskResult) GetSecondDoseStatus() int32 {
	if x != nil {
		return x.SecondDoseStatus
	}
	return 0
}

func (x *DrugChartForNurseDeskResult) GetThirdDoseStatus() int32 {
	if x != nil {
		return x.ThirdDoseStatus
	}
	return 0
}

func (x *DrugChartForNurseDeskResult) GetFourthDoseStatus() int32 {
	if x != nil {
		return x.FourthDoseStatus
	}
	return 0
}

func (x *DrugChartForNurseDeskResult) GetDrugorderId() int64 {
	if x != nil {
		return x.DrugorderId
	}
	return 0
}

func (x *DrugChartForNurseDeskResult) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type DrugChartForNurseDeskResultList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MorningList []*DrugChartForNurseDeskResult `protobuf:"bytes,1,rep,name=morningList,proto3" json:"morningList,omitempty"`
	NoonList    []*DrugChartForNurseDeskResult `protobuf:"bytes,2,rep,name=noonList,proto3" json:"noonList,omitempty"`
	EveList     []*DrugChartForNurseDeskResult `protobuf:"bytes,3,rep,name=eveList,proto3" json:"eveList,omitempty"`
	NightList   []*DrugChartForNurseDeskResult `protobuf:"bytes,4,rep,name=nightList,proto3" json:"nightList,omitempty"`
}

func (x *DrugChartForNurseDeskResultList) Reset() {
	*x = DrugChartForNurseDeskResultList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugchart_attributes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugChartForNurseDeskResultList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugChartForNurseDeskResultList) ProtoMessage() {}

func (x *DrugChartForNurseDeskResultList) ProtoReflect() protoreflect.Message {
	mi := &file_drugchart_attributes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugChartForNurseDeskResultList.ProtoReflect.Descriptor instead.
func (*DrugChartForNurseDeskResultList) Descriptor() ([]byte, []int) {
	return file_drugchart_attributes_proto_rawDescGZIP(), []int{6}
}

func (x *DrugChartForNurseDeskResultList) GetMorningList() []*DrugChartForNurseDeskResult {
	if x != nil {
		return x.MorningList
	}
	return nil
}

func (x *DrugChartForNurseDeskResultList) GetNoonList() []*DrugChartForNurseDeskResult {
	if x != nil {
		return x.NoonList
	}
	return nil
}

func (x *DrugChartForNurseDeskResultList) GetEveList() []*DrugChartForNurseDeskResult {
	if x != nil {
		return x.EveList
	}
	return nil
}

func (x *DrugChartForNurseDeskResultList) GetNightList() []*DrugChartForNurseDeskResult {
	if x != nil {
		return x.NightList
	}
	return nil
}

type DrugChartForNurseDesktParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId string `protobuf:"bytes,1,opt,name=patientId,proto3" json:"patientId,omitempty"`
	Date      string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *DrugChartForNurseDesktParam) Reset() {
	*x = DrugChartForNurseDesktParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugchart_attributes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugChartForNurseDesktParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugChartForNurseDesktParam) ProtoMessage() {}

func (x *DrugChartForNurseDesktParam) ProtoReflect() protoreflect.Message {
	mi := &file_drugchart_attributes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugChartForNurseDesktParam.ProtoReflect.Descriptor instead.
func (*DrugChartForNurseDesktParam) Descriptor() ([]byte, []int) {
	return file_drugchart_attributes_proto_rawDescGZIP(), []int{7}
}

func (x *DrugChartForNurseDesktParam) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *DrugChartForNurseDesktParam) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

var File_drugchart_attributes_proto protoreflect.FileDescriptor

var file_drugchart_attributes_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x64, 0x72, 0x75, 0x67, 0x63, 0x68, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x22, 0x36, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x72, 0x75, 0x67, 0x43, 0x68, 0x61, 0x72, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb6, 0x02, 0x0a, 0x0a, 0x44, 0x72, 0x75,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x75, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x72, 0x75, 0x67, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x72, 0x75, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x72, 0x75, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73,
	0x63, 0x69, 0x65, 0x6e, 0x74, 0x66, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x63, 0x69, 0x65, 0x6e, 0x74, 0x66, 0x69, 0x63, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x75, 0x67, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x75, 0x67, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x6f,
	0x75, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x61, 0x6e, 0x67, 0x65, 0x72, 0x6f, 0x75, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x4f, 0x66, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6e, 0x6f, 0x4f, 0x66, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x22, 0xbc, 0x01, 0x0a, 0x16, 0x44, 0x72, 0x75, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x46, 0x6f, 0x72, 0x44, 0x61, 0x73, 0x68, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x72, 0x75, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x72, 0x75, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x6c,
	0x22, 0x37, 0x0a, 0x0f, 0x44, 0x72, 0x75, 0x67, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x64, 0x72, 0x75, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x75, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x05, 0x64, 0x72, 0x75, 0x67, 0x73, 0x22, 0x4f, 0x0a, 0x1b, 0x44, 0x72, 0x75,
	0x67, 0x43, 0x68, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x44,
	0x61, 0x73, 0x68, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x30, 0x0a, 0x05, 0x64, 0x72, 0x75, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x75,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x46, 0x6f, 0x72, 0x44, 0x61, 0x73, 0x68, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x05, 0x64, 0x72, 0x75, 0x67, 0x73, 0x22, 0xa0, 0x04, 0x0a, 0x1b, 0x44,
	0x72, 0x75, 0x67, 0x43, 0x68, 0x61, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x4e, 0x75, 0x72, 0x73, 0x65,
	0x44, 0x65, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72,
	0x75, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72,
	0x75, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6f, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x6c, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d,
	0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x6d,
	0x6d, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x6d, 0x6d,
	0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44,
	0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x44, 0x6f,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2a, 0x0a, 0x10, 0x66, 0x6f, 0x75, 0x72, 0x74, 0x68, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x6f, 0x75, 0x72, 0x74,
	0x68, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x72, 0x75, 0x67, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x64, 0x72, 0x75, 0x67, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9b, 0x02,
	0x0a, 0x1f, 0x44, 0x72, 0x75, 0x67, 0x43, 0x68, 0x61, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x4e, 0x75,
	0x72, 0x73, 0x65, 0x44, 0x65, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x41, 0x0a, 0x0b, 0x6d, 0x6f, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x75, 0x67,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x4e, 0x75, 0x72, 0x73, 0x65, 0x44, 0x65, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x6d, 0x6f, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x6e, 0x6f, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x75, 0x67,
	0x43, 0x68, 0x61, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x4e, 0x75, 0x72, 0x73, 0x65, 0x44, 0x65, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x08, 0x6e, 0x6f, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x75, 0x67, 0x43, 0x68, 0x61, 0x72,
	0x74, 0x46, 0x6f, 0x72, 0x4e, 0x75, 0x72, 0x73, 0x65, 0x44, 0x65, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x07, 0x65, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x09,
	0x6e, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x75, 0x67, 0x43, 0x68, 0x61, 0x72, 0x74, 0x46, 0x6f,
	0x72, 0x4e, 0x75, 0x72, 0x73, 0x65, 0x44, 0x65, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x09, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4f, 0x0a, 0x1b, 0x44,
	0x72, 0x75, 0x67, 0x43, 0x68, 0x61, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x4e, 0x75, 0x72, 0x73, 0x65,
	0x44, 0x65, 0x73, 0x6b, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_drugchart_attributes_proto_rawDescOnce sync.Once
	file_drugchart_attributes_proto_rawDescData = file_drugchart_attributes_proto_rawDesc
)

func file_drugchart_attributes_proto_rawDescGZIP() []byte {
	file_drugchart_attributes_proto_rawDescOnce.Do(func() {
		file_drugchart_attributes_proto_rawDescData = protoimpl.X.CompressGZIP(file_drugchart_attributes_proto_rawDescData)
	})
	return file_drugchart_attributes_proto_rawDescData
}

var file_drugchart_attributes_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_drugchart_attributes_proto_goTypes = []interface{}{
	(*GetDrugChartParameters)(nil),          // 0: pb.GetDrugChartParameters
	(*DrugResult)(nil),                      // 1: pb.DrugResult
	(*DrugResultForDashBoard)(nil),          // 2: pb.DrugResultForDashBoard
	(*DrugChartResult)(nil),                 // 3: pb.DrugChartResult
	(*DrugChartResultForDashBoard)(nil),     // 4: pb.DrugChartResultForDashBoard
	(*DrugChartForNurseDeskResult)(nil),     // 5: pb.DrugChartForNurseDeskResult
	(*DrugChartForNurseDeskResultList)(nil), // 6: pb.DrugChartForNurseDeskResultList
	(*DrugChartForNurseDesktParam)(nil),     // 7: pb.DrugChartForNurseDesktParam
}
var file_drugchart_attributes_proto_depIdxs = []int32{
	1, // 0: pb.DrugChartResult.drugs:type_name -> pb.DrugResult
	2, // 1: pb.DrugChartResultForDashBoard.drugs:type_name -> pb.DrugResultForDashBoard
	5, // 2: pb.DrugChartForNurseDeskResultList.morningList:type_name -> pb.DrugChartForNurseDeskResult
	5, // 3: pb.DrugChartForNurseDeskResultList.noonList:type_name -> pb.DrugChartForNurseDeskResult
	5, // 4: pb.DrugChartForNurseDeskResultList.eveList:type_name -> pb.DrugChartForNurseDeskResult
	5, // 5: pb.DrugChartForNurseDeskResultList.nightList:type_name -> pb.DrugChartForNurseDeskResult
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_drugchart_attributes_proto_init() }
func file_drugchart_attributes_proto_init() {
	if File_drugchart_attributes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_drugchart_attributes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDrugChartParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugchart_attributes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugchart_attributes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugResultForDashBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugchart_attributes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugChartResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugchart_attributes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugChartResultForDashBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugchart_attributes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugChartForNurseDeskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugchart_attributes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugChartForNurseDeskResultList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugchart_attributes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugChartForNurseDesktParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_drugchart_attributes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_drugchart_attributes_proto_goTypes,
		DependencyIndexes: file_drugchart_attributes_proto_depIdxs,
		MessageInfos:      file_drugchart_attributes_proto_msgTypes,
	}.Build()
	File_drugchart_attributes_proto = out.File
	file_drugchart_attributes_proto_rawDesc = nil
	file_drugchart_attributes_proto_goTypes = nil
	file_drugchart_attributes_proto_depIdxs = nil
}
