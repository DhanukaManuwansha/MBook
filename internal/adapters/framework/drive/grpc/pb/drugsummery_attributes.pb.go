// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.1
// source: drugsummery_attributes.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDrugSummeryParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId string `protobuf:"bytes,1,opt,name=patientId,proto3" json:"patientId,omitempty"`
}

func (x *GetDrugSummeryParameters) Reset() {
	*x = GetDrugSummeryParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugsummery_attributes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDrugSummeryParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDrugSummeryParameters) ProtoMessage() {}

func (x *GetDrugSummeryParameters) ProtoReflect() protoreflect.Message {
	mi := &file_drugsummery_attributes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDrugSummeryParameters.ProtoReflect.Descriptor instead.
func (*GetDrugSummeryParameters) Descriptor() ([]byte, []int) {
	return file_drugsummery_attributes_proto_rawDescGZIP(), []int{0}
}

func (x *GetDrugSummeryParameters) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type DrugSummeryResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrugsummeryId int64  `protobuf:"varint,1,opt,name=drugsummery_id,json=drugsummeryId,proto3" json:"drugsummery_id,omitempty"`
	SummeryDate   string `protobuf:"bytes,2,opt,name=summery_date,json=summeryDate,proto3" json:"summery_date,omitempty"`
	SummeryStatus bool   `protobuf:"varint,3,opt,name=summery_status,json=summeryStatus,proto3" json:"summery_status,omitempty"`
	DrugorderId   int64  `protobuf:"varint,4,opt,name=drugorder_id,json=drugorderId,proto3" json:"drugorder_id,omitempty"`
	PatientId     string `protobuf:"bytes,5,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
}

func (x *DrugSummeryResult) Reset() {
	*x = DrugSummeryResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugsummery_attributes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugSummeryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugSummeryResult) ProtoMessage() {}

func (x *DrugSummeryResult) ProtoReflect() protoreflect.Message {
	mi := &file_drugsummery_attributes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugSummeryResult.ProtoReflect.Descriptor instead.
func (*DrugSummeryResult) Descriptor() ([]byte, []int) {
	return file_drugsummery_attributes_proto_rawDescGZIP(), []int{1}
}

func (x *DrugSummeryResult) GetDrugsummeryId() int64 {
	if x != nil {
		return x.DrugsummeryId
	}
	return 0
}

func (x *DrugSummeryResult) GetSummeryDate() string {
	if x != nil {
		return x.SummeryDate
	}
	return ""
}

func (x *DrugSummeryResult) GetSummeryStatus() bool {
	if x != nil {
		return x.SummeryStatus
	}
	return false
}

func (x *DrugSummeryResult) GetDrugorderId() int64 {
	if x != nil {
		return x.DrugorderId
	}
	return 0
}

func (x *DrugSummeryResult) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type DrugSummeryOfADrugResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrugName         string `protobuf:"bytes,1,opt,name=drugName,proto3" json:"drugName,omitempty"`
	Dose             string `protobuf:"bytes,2,opt,name=dose,proto3" json:"dose,omitempty"`
	Dosage           string `protobuf:"bytes,3,opt,name=dosage,proto3" json:"dosage,omitempty"`
	Frequency        int32  `protobuf:"varint,4,opt,name=frequency,proto3" json:"frequency,omitempty"`
	GivenDate        string `protobuf:"bytes,5,opt,name=givenDate,proto3" json:"givenDate,omitempty"`
	GiveUntill       string `protobuf:"bytes,6,opt,name=giveUntill,proto3" json:"giveUntill,omitempty"`
	DrugsummeryId    int64  `protobuf:"varint,7,opt,name=drugsummery_id,json=drugsummeryId,proto3" json:"drugsummery_id,omitempty"`
	SummeryDate      string `protobuf:"bytes,8,opt,name=summery_date,json=summeryDate,proto3" json:"summery_date,omitempty"`
	SummeryStatus    bool   `protobuf:"varint,9,opt,name=summery_status,json=summeryStatus,proto3" json:"summery_status,omitempty"`
	FirstDoseStatus  int32  `protobuf:"varint,10,opt,name=firstDoseStatus,proto3" json:"firstDoseStatus,omitempty"`
	SecondDoseStatus int32  `protobuf:"varint,11,opt,name=secondDoseStatus,proto3" json:"secondDoseStatus,omitempty"`
	ThirdDoseStatus  int32  `protobuf:"varint,12,opt,name=thirdDoseStatus,proto3" json:"thirdDoseStatus,omitempty"`
	FourthDoseStatus int32  `protobuf:"varint,13,opt,name=fourthDoseStatus,proto3" json:"fourthDoseStatus,omitempty"`
	DrugorderId      int64  `protobuf:"varint,14,opt,name=drugorder_id,json=drugorderId,proto3" json:"drugorder_id,omitempty"`
	PatientId        string `protobuf:"bytes,15,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
}

func (x *DrugSummeryOfADrugResult) Reset() {
	*x = DrugSummeryOfADrugResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugsummery_attributes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugSummeryOfADrugResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugSummeryOfADrugResult) ProtoMessage() {}

func (x *DrugSummeryOfADrugResult) ProtoReflect() protoreflect.Message {
	mi := &file_drugsummery_attributes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugSummeryOfADrugResult.ProtoReflect.Descriptor instead.
func (*DrugSummeryOfADrugResult) Descriptor() ([]byte, []int) {
	return file_drugsummery_attributes_proto_rawDescGZIP(), []int{2}
}

func (x *DrugSummeryOfADrugResult) GetDrugName() string {
	if x != nil {
		return x.DrugName
	}
	return ""
}

func (x *DrugSummeryOfADrugResult) GetDose() string {
	if x != nil {
		return x.Dose
	}
	return ""
}

func (x *DrugSummeryOfADrugResult) GetDosage() string {
	if x != nil {
		return x.Dosage
	}
	return ""
}

func (x *DrugSummeryOfADrugResult) GetFrequency() int32 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *DrugSummeryOfADrugResult) GetGivenDate() string {
	if x != nil {
		return x.GivenDate
	}
	return ""
}

func (x *DrugSummeryOfADrugResult) GetGiveUntill() string {
	if x != nil {
		return x.GiveUntill
	}
	return ""
}

func (x *DrugSummeryOfADrugResult) GetDrugsummeryId() int64 {
	if x != nil {
		return x.DrugsummeryId
	}
	return 0
}

func (x *DrugSummeryOfADrugResult) GetSummeryDate() string {
	if x != nil {
		return x.SummeryDate
	}
	return ""
}

func (x *DrugSummeryOfADrugResult) GetSummeryStatus() bool {
	if x != nil {
		return x.SummeryStatus
	}
	return false
}

func (x *DrugSummeryOfADrugResult) GetFirstDoseStatus() int32 {
	if x != nil {
		return x.FirstDoseStatus
	}
	return 0
}

func (x *DrugSummeryOfADrugResult) GetSecondDoseStatus() int32 {
	if x != nil {
		return x.SecondDoseStatus
	}
	return 0
}

func (x *DrugSummeryOfADrugResult) GetThirdDoseStatus() int32 {
	if x != nil {
		return x.ThirdDoseStatus
	}
	return 0
}

func (x *DrugSummeryOfADrugResult) GetFourthDoseStatus() int32 {
	if x != nil {
		return x.FourthDoseStatus
	}
	return 0
}

func (x *DrugSummeryOfADrugResult) GetDrugorderId() int64 {
	if x != nil {
		return x.DrugorderId
	}
	return 0
}

func (x *DrugSummeryOfADrugResult) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

type DrugSummeryUpdateParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrugsummeryId    int64  `protobuf:"varint,1,opt,name=drugsummery_id,json=drugsummeryId,proto3" json:"drugsummery_id,omitempty"`
	SummeryDate      string `protobuf:"bytes,2,opt,name=summery_date,json=summeryDate,proto3" json:"summery_date,omitempty"`
	SummeryStatus    bool   `protobuf:"varint,3,opt,name=summery_status,json=summeryStatus,proto3" json:"summery_status,omitempty"`
	DrugorderId      int64  `protobuf:"varint,4,opt,name=drugorder_id,json=drugorderId,proto3" json:"drugorder_id,omitempty"`
	PatientId        string `protobuf:"bytes,5,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	FirstDoseStatus  int32  `protobuf:"varint,6,opt,name=firstDoseStatus,proto3" json:"firstDoseStatus,omitempty"`
	SecondDoseStatus int32  `protobuf:"varint,7,opt,name=secondDoseStatus,proto3" json:"secondDoseStatus,omitempty"`
	ThirdDoseStatus  int32  `protobuf:"varint,8,opt,name=thirdDoseStatus,proto3" json:"thirdDoseStatus,omitempty"`
	FourthDoseStatus int32  `protobuf:"varint,9,opt,name=fourthDoseStatus,proto3" json:"fourthDoseStatus,omitempty"`
}

func (x *DrugSummeryUpdateParam) Reset() {
	*x = DrugSummeryUpdateParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugsummery_attributes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugSummeryUpdateParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugSummeryUpdateParam) ProtoMessage() {}

func (x *DrugSummeryUpdateParam) ProtoReflect() protoreflect.Message {
	mi := &file_drugsummery_attributes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugSummeryUpdateParam.ProtoReflect.Descriptor instead.
func (*DrugSummeryUpdateParam) Descriptor() ([]byte, []int) {
	return file_drugsummery_attributes_proto_rawDescGZIP(), []int{3}
}

func (x *DrugSummeryUpdateParam) GetDrugsummeryId() int64 {
	if x != nil {
		return x.DrugsummeryId
	}
	return 0
}

func (x *DrugSummeryUpdateParam) GetSummeryDate() string {
	if x != nil {
		return x.SummeryDate
	}
	return ""
}

func (x *DrugSummeryUpdateParam) GetSummeryStatus() bool {
	if x != nil {
		return x.SummeryStatus
	}
	return false
}

func (x *DrugSummeryUpdateParam) GetDrugorderId() int64 {
	if x != nil {
		return x.DrugorderId
	}
	return 0
}

func (x *DrugSummeryUpdateParam) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *DrugSummeryUpdateParam) GetFirstDoseStatus() int32 {
	if x != nil {
		return x.FirstDoseStatus
	}
	return 0
}

func (x *DrugSummeryUpdateParam) GetSecondDoseStatus() int32 {
	if x != nil {
		return x.SecondDoseStatus
	}
	return 0
}

func (x *DrugSummeryUpdateParam) GetThirdDoseStatus() int32 {
	if x != nil {
		return x.ThirdDoseStatus
	}
	return 0
}

func (x *DrugSummeryUpdateParam) GetFourthDoseStatus() int32 {
	if x != nil {
		return x.FourthDoseStatus
	}
	return 0
}

type DrugSummeryUpdateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DrugsummeryId    int64  `protobuf:"varint,1,opt,name=drugsummery_id,json=drugsummeryId,proto3" json:"drugsummery_id,omitempty"`
	SummeryDate      string `protobuf:"bytes,2,opt,name=summery_date,json=summeryDate,proto3" json:"summery_date,omitempty"`
	SummeryStatus    bool   `protobuf:"varint,3,opt,name=summery_status,json=summeryStatus,proto3" json:"summery_status,omitempty"`
	DrugorderId      int64  `protobuf:"varint,4,opt,name=drugorder_id,json=drugorderId,proto3" json:"drugorder_id,omitempty"`
	PatientId        string `protobuf:"bytes,5,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	FirstDoseStatus  int32  `protobuf:"varint,6,opt,name=firstDoseStatus,proto3" json:"firstDoseStatus,omitempty"`
	SecondDoseStatus int32  `protobuf:"varint,7,opt,name=secondDoseStatus,proto3" json:"secondDoseStatus,omitempty"`
	ThirdDoseStatus  int32  `protobuf:"varint,8,opt,name=thirdDoseStatus,proto3" json:"thirdDoseStatus,omitempty"`
	FourthDoseStatus int32  `protobuf:"varint,9,opt,name=fourthDoseStatus,proto3" json:"fourthDoseStatus,omitempty"`
}

func (x *DrugSummeryUpdateResult) Reset() {
	*x = DrugSummeryUpdateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugsummery_attributes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugSummeryUpdateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugSummeryUpdateResult) ProtoMessage() {}

func (x *DrugSummeryUpdateResult) ProtoReflect() protoreflect.Message {
	mi := &file_drugsummery_attributes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugSummeryUpdateResult.ProtoReflect.Descriptor instead.
func (*DrugSummeryUpdateResult) Descriptor() ([]byte, []int) {
	return file_drugsummery_attributes_proto_rawDescGZIP(), []int{4}
}

func (x *DrugSummeryUpdateResult) GetDrugsummeryId() int64 {
	if x != nil {
		return x.DrugsummeryId
	}
	return 0
}

func (x *DrugSummeryUpdateResult) GetSummeryDate() string {
	if x != nil {
		return x.SummeryDate
	}
	return ""
}

func (x *DrugSummeryUpdateResult) GetSummeryStatus() bool {
	if x != nil {
		return x.SummeryStatus
	}
	return false
}

func (x *DrugSummeryUpdateResult) GetDrugorderId() int64 {
	if x != nil {
		return x.DrugorderId
	}
	return 0
}

func (x *DrugSummeryUpdateResult) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *DrugSummeryUpdateResult) GetFirstDoseStatus() int32 {
	if x != nil {
		return x.FirstDoseStatus
	}
	return 0
}

func (x *DrugSummeryUpdateResult) GetSecondDoseStatus() int32 {
	if x != nil {
		return x.SecondDoseStatus
	}
	return 0
}

func (x *DrugSummeryUpdateResult) GetThirdDoseStatus() int32 {
	if x != nil {
		return x.ThirdDoseStatus
	}
	return 0
}

func (x *DrugSummeryUpdateResult) GetFourthDoseStatus() int32 {
	if x != nil {
		return x.FourthDoseStatus
	}
	return 0
}

type DrugSummeryOfADrugResultParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatientId string `protobuf:"bytes,1,opt,name=patientId,proto3" json:"patientId,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
}

func (x *DrugSummeryOfADrugResultParam) Reset() {
	*x = DrugSummeryOfADrugResultParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugsummery_attributes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugSummeryOfADrugResultParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugSummeryOfADrugResultParam) ProtoMessage() {}

func (x *DrugSummeryOfADrugResultParam) ProtoReflect() protoreflect.Message {
	mi := &file_drugsummery_attributes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugSummeryOfADrugResultParam.ProtoReflect.Descriptor instead.
func (*DrugSummeryOfADrugResultParam) Descriptor() ([]byte, []int) {
	return file_drugsummery_attributes_proto_rawDescGZIP(), []int{5}
}

func (x *DrugSummeryOfADrugResultParam) GetPatientId() string {
	if x != nil {
		return x.PatientId
	}
	return ""
}

func (x *DrugSummeryOfADrugResultParam) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *DrugSummeryOfADrugResultParam) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type DrugSummeryOfADrugResultList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drugsummery []*DrugSummeryOfADrugResult `protobuf:"bytes,1,rep,name=drugsummery,proto3" json:"drugsummery,omitempty"`
}

func (x *DrugSummeryOfADrugResultList) Reset() {
	*x = DrugSummeryOfADrugResultList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugsummery_attributes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugSummeryOfADrugResultList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugSummeryOfADrugResultList) ProtoMessage() {}

func (x *DrugSummeryOfADrugResultList) ProtoReflect() protoreflect.Message {
	mi := &file_drugsummery_attributes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugSummeryOfADrugResultList.ProtoReflect.Descriptor instead.
func (*DrugSummeryOfADrugResultList) Descriptor() ([]byte, []int) {
	return file_drugsummery_attributes_proto_rawDescGZIP(), []int{6}
}

func (x *DrugSummeryOfADrugResultList) GetDrugsummery() []*DrugSummeryOfADrugResult {
	if x != nil {
		return x.Drugsummery
	}
	return nil
}

type DrugSummeryListResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Drugsummery []*DrugSummeryResult `protobuf:"bytes,1,rep,name=drugsummery,proto3" json:"drugsummery,omitempty"`
}

func (x *DrugSummeryListResult) Reset() {
	*x = DrugSummeryListResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drugsummery_attributes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrugSummeryListResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugSummeryListResult) ProtoMessage() {}

func (x *DrugSummeryListResult) ProtoReflect() protoreflect.Message {
	mi := &file_drugsummery_attributes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugSummeryListResult.ProtoReflect.Descriptor instead.
func (*DrugSummeryListResult) Descriptor() ([]byte, []int) {
	return file_drugsummery_attributes_proto_rawDescGZIP(), []int{7}
}

func (x *DrugSummeryListResult) GetDrugsummery() []*DrugSummeryResult {
	if x != nil {
		return x.Drugsummery
	}
	return nil
}

var File_drugsummery_attributes_proto protoreflect.FileDescriptor

var file_drugsummery_attributes_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x22, 0x38, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x72, 0x75, 0x67, 0x53, 0x75, 0x6d,
	0x6d, 0x65, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc6, 0x01, 0x0a,
	0x11, 0x44, 0x72, 0x75, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x72, 0x75, 0x67,
	0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x6d,
	0x6d, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72, 0x75, 0x67, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x72, 0x75, 0x67, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9d, 0x04, 0x0a, 0x18, 0x44, 0x72, 0x75, 0x67, 0x53, 0x75,
	0x6d, 0x6d, 0x65, 0x72, 0x79, 0x4f, 0x66, 0x41, 0x44, 0x72, 0x75, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x72, 0x75, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x72, 0x75, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x6f,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x76, 0x65,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x76,
	0x65, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x55, 0x6e,
	0x74, 0x69, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x69, 0x76, 0x65,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75,
	0x6d, 0x6d, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x64, 0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a,
	0x0f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x44, 0x6f, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x6f, 0x75, 0x72, 0x74,
	0x68, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x66, 0x6f, 0x75, 0x72, 0x74, 0x68, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72, 0x75, 0x67, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x72, 0x75, 0x67, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xf7, 0x02, 0x0a, 0x16, 0x44, 0x72, 0x75, 0x67, 0x53, 0x75,
	0x6d, 0x6d, 0x65, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75,
	0x6d, 0x6d, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x65,
	0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75,
	0x6d, 0x6d, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x72, 0x75, 0x67, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x72, 0x75, 0x67, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x6f, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x44,
	0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x6f, 0x75, 0x72, 0x74, 0x68, 0x44, 0x6f, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66,
	0x6f, 0x75, 0x72, 0x74, 0x68, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xf8, 0x02, 0x0a, 0x17, 0x44, 0x72, 0x75, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64,
	0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73,
	0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x72, 0x75, 0x67, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x64, 0x72, 0x75, 0x67, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x6f,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x44, 0x6f, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x66, 0x6f, 0x75, 0x72, 0x74, 0x68, 0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x66, 0x6f, 0x75, 0x72, 0x74, 0x68,
	0x44, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x75, 0x0a, 0x1d, 0x44, 0x72,
	0x75, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x4f, 0x66, 0x41, 0x44, 0x72, 0x75, 0x67,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x22, 0x5e, 0x0a, 0x1c, 0x44, 0x72, 0x75, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79,
	0x4f, 0x66, 0x41, 0x44, 0x72, 0x75, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x75, 0x67,
	0x53, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x4f, 0x66, 0x41, 0x44, 0x72, 0x75, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72,
	0x79, 0x22, 0x50, 0x0a, 0x15, 0x44, 0x72, 0x75, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x64, 0x72,
	0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x72, 0x75, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0b, 0x64, 0x72, 0x75, 0x67, 0x73, 0x75, 0x6d, 0x6d,
	0x65, 0x72, 0x79, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_drugsummery_attributes_proto_rawDescOnce sync.Once
	file_drugsummery_attributes_proto_rawDescData = file_drugsummery_attributes_proto_rawDesc
)

func file_drugsummery_attributes_proto_rawDescGZIP() []byte {
	file_drugsummery_attributes_proto_rawDescOnce.Do(func() {
		file_drugsummery_attributes_proto_rawDescData = protoimpl.X.CompressGZIP(file_drugsummery_attributes_proto_rawDescData)
	})
	return file_drugsummery_attributes_proto_rawDescData
}

var file_drugsummery_attributes_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_drugsummery_attributes_proto_goTypes = []interface{}{
	(*GetDrugSummeryParameters)(nil),      // 0: pb.GetDrugSummeryParameters
	(*DrugSummeryResult)(nil),             // 1: pb.DrugSummeryResult
	(*DrugSummeryOfADrugResult)(nil),      // 2: pb.DrugSummeryOfADrugResult
	(*DrugSummeryUpdateParam)(nil),        // 3: pb.DrugSummeryUpdateParam
	(*DrugSummeryUpdateResult)(nil),       // 4: pb.DrugSummeryUpdateResult
	(*DrugSummeryOfADrugResultParam)(nil), // 5: pb.DrugSummeryOfADrugResultParam
	(*DrugSummeryOfADrugResultList)(nil),  // 6: pb.DrugSummeryOfADrugResultList
	(*DrugSummeryListResult)(nil),         // 7: pb.DrugSummeryListResult
}
var file_drugsummery_attributes_proto_depIdxs = []int32{
	2, // 0: pb.DrugSummeryOfADrugResultList.drugsummery:type_name -> pb.DrugSummeryOfADrugResult
	1, // 1: pb.DrugSummeryListResult.drugsummery:type_name -> pb.DrugSummeryResult
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_drugsummery_attributes_proto_init() }
func file_drugsummery_attributes_proto_init() {
	if File_drugsummery_attributes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_drugsummery_attributes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDrugSummeryParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugsummery_attributes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugSummeryResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugsummery_attributes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugSummeryOfADrugResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugsummery_attributes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugSummeryUpdateParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugsummery_attributes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugSummeryUpdateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugsummery_attributes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugSummeryOfADrugResultParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugsummery_attributes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugSummeryOfADrugResultList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drugsummery_attributes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DrugSummeryListResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_drugsummery_attributes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_drugsummery_attributes_proto_goTypes,
		DependencyIndexes: file_drugsummery_attributes_proto_depIdxs,
		MessageInfos:      file_drugsummery_attributes_proto_msgTypes,
	}.Build()
	File_drugsummery_attributes_proto = out.File
	file_drugsummery_attributes_proto_rawDesc = nil
	file_drugsummery_attributes_proto_goTypes = nil
	file_drugsummery_attributes_proto_depIdxs = nil
}
